pipeline{
	agent any
	
	environment {
		RELEASE = '1.3'
		VERSION_NUMBER = '1.15'
	}
	parameters{
		booleanParam(name:'RC', defaultValue: false, description:'Is this a Release Candidate?')
	}
	stages{
		stage('audit tools'){
			steps{
				auditTools()
			}
		}
		stage('Build'){
			agent any
			environment {
				LOG_LEVEL = 'INFO'
				SUFFIX = getVersionSuffix()
			}
			steps{
				sh "echo Build - Release ${SUFFIX} for LogLevel ${LOG_LEVEL}"
			}
		}
		stage('Test'){
			steps{
				sh "echo Testing - Release ${RELEASE} "
			}
		}
		stage('Deploy'){
			input{
				message 'Deploy?'
				ok 'Do It!!'
				parameters{
					string(name:'TARGET_ENVIRONMENT', defaultValue:'PROD',description:'Target deployment environment')
				}				
			}
			steps{
				sh "echo Deploying - Release ${RELEASE} to environment ${TARGET_ENVIRONMENT} "
				writeFile file:'test_result.txt', text: 'successfully deployed!!!'
			}
		}
	}
	
	post{
		always{
			echo 'Prints whether deploy happened or not, success or failure'
		}
		success{
			archiveArtifacts 'test_result.txt'
		}
	}
}

void auditTools(){
	sh '''
		git version
	   '''
}

String getVersionSuffix(){
	if(env.RC){
		return env.VERSION_NUMBER
	}else{
		return env.VERSION_RC + '+ci.' + env.VERSION_NUMBER
	}
}
